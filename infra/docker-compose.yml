version: '3.8'
services:

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media_value:/var/html/media/
      - static_value:/var/html/static/
    restart:
      always
    depends_on:
      - web_backend

  web_backend:
    container_name: web_backend
    image: felix74/my_food:v1
    ports:
      - 8000:8000
    restart:
      on-failure
    volumes:
      - media_value:/app/media/
      - static_value:/app/static/
    depends_on:
      postgres_db:
        condition: service_healthy
    command: 
      bash -c "python3 manage.py makemigrations &&
               python3 manage.py migrate &&
               python3 manage.py start_load &&
               python3 manage.py collectstatic --noinput &&
               gunicorn foodgram.wsgi:application --bind 0:8000"


  postgres_db:
    container_name: postgres_db
    image: postgres:15.1-alpine
    restart:
      always
    env_file:
      .env
    ports:
     - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      timeout: 5s
      retries: 5
    volumes:
      - storage_db:/data/postgres

volumes:
  storage_data:
  storage_db:
  static_value:
  media_value: